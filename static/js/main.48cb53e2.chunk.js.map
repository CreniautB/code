{"version":3,"sources":["component/square/square.jsx","component/level/getAllIndexes.js","component/level/level.jsx","component/homePage/generate.js","component/homePage/homePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Square","content","color","className","style","background","getAllIndexes","arr","val","indexes","i","indexOf","push","Level","level","guess","useState","array","setArray","tour","setTour","win","setWin","input","useRef","handleClick","e","current","value","length","currentArray","split","newArray","_","isEqual","sortBy","includes","item","oldArray","note","getNote","ref","onKeyPress","key","handleKeyPress","onClick","map","col","index","ligne","generate","n","max","min","Math","pow","floor","random","substring","HomePage","setLevel","selectLevel","id","App","src","alt","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48cb53e2.chunk.js","sourcesContent":["import React from 'react' \r\n\r\nfunction Square({ content, color }){\r\n\r\n\r\n    return(\r\n        <div className=\"square\" style={{background: color}} >\r\n            {content}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Square","function getAllIndexes(arr, val) {\r\n    var indexes = [], i = -1;\r\n    while ((i = arr.indexOf(val, i+1)) !== -1){\r\n        indexes.push(i);\r\n    }\r\n    return indexes;\r\n}\r\n\r\nexport default getAllIndexes","import React, { useState, useRef } from 'react'\r\nimport './level.css'\r\nimport _ from 'lodash'\r\nimport Square from '../square/square'\r\nimport getAllIndexes from './getAllIndexes'\r\n\r\nfunction Level ({level, guess }) {\r\n   \r\n\r\n    const [array, setArray] = useState([])\r\n    const [tour, setTour] = useState(0)    \r\n    const[win, setWin] = useState(false)\r\n    const input = useRef(null);\r\n    \r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter'){\r\n            handleClick(e)\r\n          }\r\n    }\r\n\r\n    function handleClick(e){\r\n        if (input.current.value !== '' && input.current.value.length === level){\r\n            let valueInput = input.current.value\r\n\r\n            let currentArray = valueInput.split('')\r\n\r\n            let newArray = [];\r\n\r\n            if (_.isEqual(_.sortBy(guess), _.sortBy(currentArray))){\r\n                setWin(true)\r\n           }\r\n\r\n            for(let i = 0;i < currentArray.length;i++){\r\n\r\n                if(!guess.includes(currentArray[i])){\r\n                    newArray.push({item: currentArray[i], color: 'red'});\r\n                }\r\n                if(guess.includes(currentArray[i])){ \r\n\r\n                    if( (getAllIndexes(guess, currentArray[i]).includes(i))){\r\n                        newArray.push({item: currentArray[i], color: 'green'});\r\n                    }\r\n                    else {\r\n                        newArray.push({item: currentArray[i], color: 'white'});\r\n                    }\r\n                }\r\n            }\r\n             \r\n            setArray(oldArray => [...oldArray, newArray]);\r\n            setTour(tour + 1)\r\n        }\r\n    }\r\n  \r\n    function getNote(tour) {\r\n        if(tour === 1 ){return 20}if(tour === 2 ) {return 18}if(tour === 3 ) {return 16}if(tour === 4 ) {return 14}if(tour === 5 ) {return 12}if(tour === 6 ) {return 10}if(tour === 7 ) {return 8}if(tour === 8 ) {return 6}if(tour === 9 ) {return 4}if(tour ===10){return 2}\r\n    }\r\n\r\n\r\n    if(win){\r\n        let note = getNote(tour)\r\n        return (\r\n            <h1>Félicitation vous avez déchiffré le code ! <br/>\r\n            Vous avez obtenu {note} / 20</h1>\r\n        )\r\n    }\r\n\r\n    if(tour === 11) {\r\n        return (\r\n            <h1>Vous n'avez pas réussi à déchiffrer le code<br/>\r\n            Qui était : <strong className=\"code\">{guess}</strong></h1>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className='level'>\r\n\r\n            <h1>Déchiffrer le code à {level} chiffre</h1>\r\n\r\n            <h2>Essai {tour} / 10</h2>\r\n\r\n            <div className=\"inputContainer\" >\r\n                <input ref={input} onKeyPress={(e) => handleKeyPress(e)} /><br/>\r\n                <button onClick={(e) => handleClick(e)} className='button' >Valider votre choix</button>\r\n            </div>\r\n                <div className=\"arrayContainer\">\r\n                \r\n                {array.map((col, index) => (\r\n\r\n                    <div className='colonne' key={index}>\r\n\r\n                    {col.map((ligne,index) => (\r\n                       <Square  key={index} content={ligne.item} color={ligne.color} />\r\n                    ))}\r\n                    </div>\r\n                ))}\r\n                </div>\r\n\r\n        </div>\r\n    \r\n    )\r\n}\r\nexport default Level","\r\nfunction generate(n) {\r\n    var add = 1, max = 12 - add;   // 12 is the min safe number Math.random() can generate without it starting to pad the end with zeros.   \r\n\r\n    if ( n > max ) {\r\n            return generate(max) + generate(n - max);\r\n    }\r\n\r\n    max        = Math.pow(10, n+add);\r\n    var min    = max/10; // Math.pow(10, n) basically\r\n    var number = Math.floor( Math.random() * (max - min + 1) ) + min;\r\n\r\n    return (\"\" + number).substring(add); \r\n}\r\n\r\nexport default generate","import React, {useState} from 'react'\r\nimport Level from '../level/level'\r\nimport './homePage.css'\r\nimport generate from './generate'\r\n\r\n\r\nfunction HomePage() {\r\n\r\n    const [level, setLevel] = useState(false)\r\n    \r\n    function selectLevel(id) {\r\n        setLevel(id)\r\n    }\r\n\r\n    if(level) {\r\n        \r\n        const guessString = generate(level)\r\n        const guess = guessString.split('')\r\n        return (\r\n            <Level  level={level} guess={guess} />\r\n        ) \r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"homePage\">\r\n        \r\n           <h1>\r\n               Jeux du Code Secret<br/>\r\n           </h1>\r\n\r\n           <h2 className=\"regle\">\r\n                Déchiffrez le code secret\r\n                <br/> Si le chiffre est dans la bonne position la case devient <strong className=\"vert\">Verte</strong><br/>\r\n                Si le chiffre est présent dans le code la case devient <strong>Blanche</strong><br/>\r\n                Sinon elle devient <strong className=\"orange\" >Orange</strong>\r\n            </h2>\r\n\r\n           <div>\r\n                <button className=\"button\" key={1} onClick={(e) => selectLevel(2,e)}>Code à 2 chiffres</button>\r\n                <button className=\"button\" key={2} onClick={(e) => selectLevel(3,e)}>Code à 3 chiffres</button>\r\n                <button className=\"button\" key={3} onClick={(e) => selectLevel(4,e)}>Code à 4 chiffres</button>\r\n                <button className=\"button\" key={4} onClick={(e) => selectLevel(5,e)}>Code à 5 chiffres</button>\r\n   \r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default HomePage","import './App.css';\nimport HomePage from './component/homePage/homePage';\nimport './component/homePage/homePage.css'\n\nfunction App() {\n  return (\n    <div className=\"homePage\">\n        <img src='img/logo.png' alt='logo' width='120px' ></img>\n        <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}